---
# file: shorewall/tasks/ubuntu_12.04.yml

# apt update cache

- name: update apt cache
  apt: update_cache=yes cache_valid_time=43200
  tags: [ 'packages', 'shorewall' ]

# ensure shorewall installed

- name: install shorewall
  apt: name=shorewall state=installed
  tags: [ 'packages', 'shorewall' ]

# ensure for controllers {{ shorewall_originals_root_path }}

- name: 'Do we have our {{ shorewall_originals_root_path }} directory ?'
  local_action: stat path="{{ shorewall_originals_root_path }}"
  register: path_stat_output
  tags: [ 'packages', 'shorewall', 'originals' ]

- debug: var=path_stat_output.stat.exists

# if not then create it

- name: "if no {{ shorewall_originals_root_path }} create it"
  local_action: file path="{{ shorewall_originals_root_path }}"
                state=directory mode=0777
  when: path_stat_output.stat.exists != true
  tags: [ 'packages', 'shorewall', 'originals' ]

# fetch original shorewall config files

- name: 'Do we have our {{ shorewall_originals_root_path }}/etc/shorewall directory ?'
  local_action: stat path={{ shorewall_originals_root_path }}/{{ ansible_hostname }}/etc/shorewall
  register: shorewall_path_stat_output
  tags: [ 'packages', 'shorewall', 'originals' ]

- debug: var=shorewall_path_stat_output.stat.exists

- name: "backup our shorewall config files for rollback/examination"
  fetch:
    src='{{ ansible_distribution }}/{{ ansible_distribution_version }}/{{ item.value.dest }}'  
    dest='{{ shorewall_originals_root_path }}'
    flat=no
  with_dict: "{{ shorewall_config_files }}"
  when: shorewall_path_stat_output.stat.exists != true
  tags: [ 'packages', 'shorewall', 'backup' ]

# template our shorewall files

- name: "running our templates and generate our configuration files"
  template:
    backup=yes
    src='{{ ansible_distribution }}/{{ ansible_distribution_version }}/{{ item.value.src }}.j2'
    dest='{{ item.value.dest }}'
    owner='{{ item.value.owner }}'
    group='{{ item.value.group }}'
    mode='{{ item.value.mode }}'
  with_dict: "{{ shorewall_config_files }}"
  notify: 
  - restart shorewall
  tags: [ 'packages', 'shorewall', 'configure' ]

# Ensure shorewall service is started and enabled

- name: enable shorewall
  service: name=shorewall state=started enabled=yes
  tags: [ 'packages', 'shorewall' ]

